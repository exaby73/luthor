import { LanguagePlugin, ProviderResult, ServiceEnvironment, TypeScriptProjectHost } from '@volar/language-service';
import type { createSys } from '@volar/typescript';
import type * as ts from 'typescript';
import type { ServerProjectProvider } from '../types';
export declare function createTypeScriptProjectProvider(ts: typeof import('typescript'), tsLocalized: ts.MapLike<string> | undefined, getLanguagePlugins: (serviceEnv: ServiceEnvironment, projectContext: {
    configFileName: string | undefined;
    host: TypeScriptProjectHost;
    sys: ReturnType<typeof createSys>;
}) => ProviderResult<LanguagePlugin[]>): ServerProjectProvider;
export declare function sortTSConfigs(file: string, a: string, b: string): number;
