{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { ExpressiveCodeEngine, ExpressiveCodeEngineConfig, ExpressiveCodePlugin } from '@expressive-code/core'\nimport { PluginFramesOptions, pluginFrames } from '@expressive-code/plugin-frames'\nimport { PluginShikiOptions } from '@expressive-code/plugin-shiki'\nimport { pluginShiki } from '@expressive-code/plugin-shiki'\nimport { pluginTextMarkers } from '@expressive-code/plugin-text-markers'\n\nexport * from '@expressive-code/core'\nexport * from '@expressive-code/plugin-frames'\nexport * from '@expressive-code/plugin-shiki'\nexport * from '@expressive-code/plugin-text-markers'\n\nexport interface ExpressiveCodeConfig extends ExpressiveCodeEngineConfig {\n\t/**\n\t * The Shiki plugin adds syntax highlighting to code blocks.\n\t *\n\t * This plugin is enabled by default. Set this to `false` to disable it.\n\t * You can also configure the plugin by setting this to an options object.\n\t */\n\tshiki?: PluginShikiOptions | boolean | undefined\n\t/**\n\t * The Text Markers plugin allows to highlight lines and inline ranges\n\t * in code blocks in various styles (e.g. marked, inserted, deleted).\n\t *\n\t * This plugin is enabled by default. Set this to `false` to disable it.\n\t */\n\ttextMarkers?: boolean | undefined\n\t/**\n\t * The Frames plugin adds an editor or terminal frame around code blocks,\n\t * including an optional title displayed as a tab or window caption.\n\t *\n\t * This plugin is enabled by default. Set this to `false` to disable it.\n\t * You can also configure the plugin by setting this to an options object.\n\t */\n\tframes?: PluginFramesOptions | boolean | undefined\n}\n\nexport class ExpressiveCode extends ExpressiveCodeEngine {\n\tconstructor({ shiki, textMarkers, frames, ...baseConfig }: ExpressiveCodeConfig = {}) {\n\t\t// Collect all default plugins with their configuration,\n\t\t// but skip those that were disabled or already added to plugins\n\t\tconst pluginsToPrepend: ExpressiveCodePlugin[] = []\n\t\tconst baseConfigPlugins = baseConfig.plugins?.flat() || []\n\t\tconst notPresentInPlugins = (name: string) => baseConfigPlugins.every((plugin) => plugin.name !== name)\n\t\tif (shiki !== false && notPresentInPlugins('Shiki')) {\n\t\t\tpluginsToPrepend.push(pluginShiki(shiki !== true ? shiki : undefined))\n\t\t}\n\t\tif (textMarkers !== false && notPresentInPlugins('TextMarkers')) {\n\t\t\tif (typeof textMarkers === 'object' && (textMarkers as { styleOverrides: unknown }).styleOverrides) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The Expressive Code config option \"textMarkers\" can no longer be an object,\n\t\t\t\t\tbut only undefined or a boolean. Please move any style settings into the\n\t\t\t\t\ttop-level \"styleOverrides\" object below the new \"textMarkers\" key.`.replace(/\\s+/g, ' ')\n\t\t\t\t)\n\t\t\t}\n\t\t\tpluginsToPrepend.push(pluginTextMarkers())\n\t\t}\n\t\tif (frames !== false && notPresentInPlugins('Frames')) {\n\t\t\tif (typeof frames === 'object' && (frames as { styleOverrides: unknown }).styleOverrides) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The config option \"frames\" no longer has its own \"styleOverrides\" object.\n\t\t\t\t\tPlease move any style settings into the top-level \"styleOverrides\" object\n\t\t\t\t\tbelow the new \"frames\" key.`.replace(/\\s+/g, ' ')\n\t\t\t\t)\n\t\t\t}\n\t\t\tpluginsToPrepend.push(pluginFrames(frames !== true ? frames : undefined))\n\t\t}\n\t\t// Create a new plugins array with the default plugins prepended\n\t\tconst pluginsWithDefaults = [...pluginsToPrepend, ...(baseConfig.plugins || [])]\n\t\t// Call the base constructor with the new plugins array\n\t\tsuper({ ...baseConfig, plugins: pluginsWithDefaults })\n\t}\n}\n"],"mappings":";AAAA,SAAS,4BAA8E;AACvF,SAA8B,oBAAoB;AAElD,SAAS,mBAAmB;AAC5B,SAAS,yBAAyB;AAElC,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AA2BP,IAAM,iBAAN,cAA6B,qBAAqB;AAAA,EACxD,YAAY,EAAE,OAAO,aAAa,QAAQ,GAAG,WAAW,IAA0B,CAAC,GAAG;AAGrF,UAAM,mBAA2C,CAAC;AAClD,UAAM,oBAAoB,WAAW,SAAS,KAAK,KAAK,CAAC;AACzD,UAAM,sBAAsB,CAAC,SAAiB,kBAAkB,MAAM,CAAC,WAAW,OAAO,SAAS,IAAI;AACtG,QAAI,UAAU,SAAS,oBAAoB,OAAO,GAAG;AACpD,uBAAiB,KAAK,YAAY,UAAU,OAAO,QAAQ,MAAS,CAAC;AAAA,IACtE;AACA,QAAI,gBAAgB,SAAS,oBAAoB,aAAa,GAAG;AAChE,UAAI,OAAO,gBAAgB,YAAa,YAA4C,gBAAgB;AACnG,cAAM,IAAI;AAAA,UACT;AAAA;AAAA,yEAEoE,QAAQ,QAAQ,GAAG;AAAA,QACxF;AAAA,MACD;AACA,uBAAiB,KAAK,kBAAkB,CAAC;AAAA,IAC1C;AACA,QAAI,WAAW,SAAS,oBAAoB,QAAQ,GAAG;AACtD,UAAI,OAAO,WAAW,YAAa,OAAuC,gBAAgB;AACzF,cAAM,IAAI;AAAA,UACT;AAAA;AAAA,kCAE6B,QAAQ,QAAQ,GAAG;AAAA,QACjD;AAAA,MACD;AACA,uBAAiB,KAAK,aAAa,WAAW,OAAO,SAAS,MAAS,CAAC;AAAA,IACzE;AAEA,UAAM,sBAAsB,CAAC,GAAG,kBAAkB,GAAI,WAAW,WAAW,CAAC,CAAE;AAE/E,UAAM,EAAE,GAAG,YAAY,SAAS,oBAAoB,CAAC;AAAA,EACtD;AACD;","names":[]}